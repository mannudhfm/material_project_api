{"version":3,"sources":["Components/PeriodicTable.jsx","Components/Pagination.jsx","Components/DataComponent.jsx","utils.jsx","App.js","index.js"],"names":["colorMap","lanthanide","metalloid","PeriodicTable","_ref","searchInput","setSearchInput","handleSearchEnter","handleKeyDown","selectedElement","setSelectedElement","useState","activeSymbol","setActiveSymbol","elementsArray","separatorOne","separatorTwo","separatorThree","React","createElement","className","type","id","placeholder","value","onChange","e","target","onKeyDown","onClick","disabled","map","element","i","key","concat","num","prevValue","handleNumberClick","data","elements","split","includes","symbol","name","handleClick","replace","RegExp","style","gridRow","ypos","gridColumn","xpos","borderColor","category","number","Pagination","materialData","currentPage","setCurrentPage","totalDoc","itemsPerPage","setItemsPerPage","allPages","Math","ceil","total_doc","parseInt","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","page","selected","containerClassName","subContainerClassName","activeClassName","pageClassName","breakClassName","previousClassName","nextClassName","DataComponent","setMaterialData","setTotalDoc","isLoading","setIsLoading","clickEnter","setClickEnter","containsNumbers","test","totalItems","endPoint","activeEndPoint","fetchmaterialData","async","axios","get","meta","error","console","useEffect","to","textDecoration","color","length","min","border","ele","index","material_id","formula_pretty","symmetry","crystal_system","nsites","energy_above_hull","toFixed","band_gap","density","ordering","App","Router","Routes","Route","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5fbccaec.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport '../App.css'\r\nimport data from '../periodic-table.json'\r\n\r\nconst colorMap = {\r\n    \"noble gas\": \"#FFBC42\",\r\n    \"alkaline earth metal\": \"#EC674E\",\r\n    \"diatomic nonmetal\": \"#D81159\",\r\n    \"alkali metal\": \"#8F2D56\",\r\n    \"transition metal\": \"#58586B\",\r\n    \"post-transition metal\": \"#218380\",\r\n    lanthanide: \"#4AABAF\",\r\n    metalloid: \"#73D2DE\",\r\n};\r\n\r\nconst PeriodicTable = ({ searchInput, setSearchInput, handleSearchEnter, handleKeyDown }) => {\r\n    const [selectedElement, setSelectedElement] = useState('Only Elements')\r\n    const [activeSymbol, setActiveSymbol] = useState(false)\r\n    const elementsArray = [\"Only Elements\", \"Atleast Elements\", \"Formula\"]\r\n    const numbersArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \"(\", \")\"]\r\n    const separatorOne = selectedElement === elementsArray[0] && \"-\"\r\n    const separatorTwo = selectedElement === elementsArray[1] && \",\"\r\n    const separatorThree = selectedElement === elementsArray[2] && \"\"\r\n\r\n    // const [separator, setSeparator] = useState(separatorOne)\r\n\r\n    // const doNotShowSymbol = selectedElement === elementsArray[1]\r\n\r\n    const handleChange = (e) => {\r\n        setSearchInput(e.target.value)\r\n    }\r\n\r\n    const handleClick = (value) => {\r\n\r\n        if (searchInput.includes(value)) {\r\n            setSearchInput((prevValue) =>\r\n                prevValue.replace(new RegExp(`${value}?`), '')\r\n            )\r\n        } else {\r\n            setSearchInput((prevValue) =>\r\n                prevValue ? `${prevValue}${separatorOne || separatorTwo || separatorThree}${value}` : value)\r\n        }\r\n        setActiveSymbol(true)\r\n\r\n    }\r\n\r\n    const handleClickElement = (ele) => {\r\n        setSelectedElement(ele)\r\n        setSearchInput('')\r\n        // if (selectedElement === elementsArray[1]) {\r\n        //     setSeparator(separatorTwo)\r\n        // } else if (selectedElement === elementsArray[2]) {\r\n        //     setSeparator(separatorThree)\r\n        // }\r\n    }\r\n\r\n    // const handleStarClick = () => {\r\n    //     setSearchInput(prevValue => [...prevValue, \"*\"]);\r\n    // }\r\n\r\n    const handleNumberClick = (num) => {\r\n        setSearchInput(prevValue => [...prevValue, num]);\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     searchInput.replace(/[-,]$/, '')\r\n    // }, [selectedElement])\r\n    return (\r\n        <div className='pt-container'>\r\n            <div className='search-container'>\r\n                <div className='search-div'>\r\n                    <p>Materials</p>\r\n                    <input type=\"text\"\r\n                        id='input'\r\n                        placeholder='e.g. Li-Fe or Li,Fe or Li3Fe or mp-19017'\r\n                        value={searchInput}\r\n                        onChange={handleChange}\r\n                        onKeyDown={handleKeyDown}\r\n                    />\r\n                    <button onClick={handleSearchEnter}\r\n                        disabled={searchInput === ''}\r\n                    >Search</button>\r\n                </div>\r\n            </div>\r\n            <div className='periodic-table'>\r\n                <div>\r\n                    <div className='pt-elements'>\r\n                        {elementsArray.map((element, i) => (\r\n                            <p key={i} className={`${(selectedElement === element) ? 'active-element' : 'not-active-element'}`} onClick={() => handleClickElement(element)}>{element}</p>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"box-star\">\r\n                        <h2>*</h2>\r\n                    </div>\r\n                    <div className='child-elements'>\r\n                        {selectedElement === elementsArray[0] &&\r\n                            <div className='selected-0'>\r\n                                <p className='child-ele'>Select elements to search for materials with <b>only</b> these elements</p>\r\n                            </div>\r\n                        }\r\n                        {selectedElement === elementsArray[1] &&\r\n                            <div className='selected-1'>\r\n                                <p className='child-ele'>Select elements to search for materials with <b>at least</b> these elements</p>\r\n                            </div>\r\n                        }\r\n                        {selectedElement === elementsArray[2] &&\r\n                            <div className='selected-2'>\r\n                                <div className='formula-numbers'>\r\n                                    {numbersArray.map((num) => (\r\n                                        <p key={num} onClick={() => handleNumberClick(num)}>{num}</p>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {data.elements.map((element) => (\r\n                    <div\r\n                        className={`element ${activeSymbol && searchInput.split(\"-\" || \",\" || \"\").includes(element.symbol) ? \"active_symbol\" : \"inActive_symbol\"}`}\r\n                        key={element.name}\r\n                        onClick={() => handleClick(element.symbol)}\r\n                        style={{\r\n                            gridRow: element.ypos,\r\n                            gridColumn: element.xpos,\r\n                            borderColor: colorMap[element.category],\r\n                        }}\r\n                    >\r\n                        <strong>{element.symbol}</strong>\r\n                        <small className=\"number\">{element.number}</small>\r\n                        <small className=\"name\">{element.name}</small>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeriodicTable","import React from 'react'\r\nimport ReactPaginate from 'react-paginate'\r\nimport '../App.css'\r\n\r\n\r\nconst Pagination = ({ materialData, currentPage, setCurrentPage, totalDoc, itemsPerPage, setItemsPerPage }) => {\r\n\r\n    const allPages = Math.ceil(totalDoc.total_doc / itemsPerPage);\r\n\r\n    const handlePageClick = (page) => {\r\n        setCurrentPage(page.selected + 1);\r\n    };\r\n\r\n    const handlePerPageChange = (e) => {\r\n        setItemsPerPage(parseInt(e.target.value, 10));\r\n        setCurrentPage(0);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='page-div'>\r\n            <select value={itemsPerPage} onChange={handlePerPageChange}>\r\n                <option value={10}>10/Page</option>\r\n                <option value={15}>15/Page</option>\r\n                <option value={30}>30/Page</option>\r\n                <option value={50}>50/Page</option>\r\n                <option value={75}>75/Page</option>\r\n            </select>\r\n            <ReactPaginate\r\n                previousLabel={'Previous'}\r\n                nextLabel={'Next'}\r\n                breakLabel={'...'}\r\n                pageCount={allPages}\r\n                marginPagesDisplayed={2}\r\n                pageRangeDisplayed={6}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={'pagination'}\r\n                subContainerClassName={'pages pagination'}\r\n                activeClassName={'active'}\r\n                pageClassName={'singleItem'}\r\n                breakClassName={'break-label'}\r\n                previousClassName={currentPage === 1 ? 'disabled prev' : 'prev'}\r\n                nextClassName={currentPage === allPages ? 'disabled next' : 'next'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PeriodicTable from './PeriodicTable';\r\nimport '../App.css'\r\nimport Pagination from './Pagination';\r\nimport { BASE_URL, _fields } from '../utils';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nfunction DataComponent() {\r\n  const [materialData, setMaterialData] = useState([])\r\n  const [totalDoc, setTotalDoc] = useState({})\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [searchInput, setSearchInput] = useState('')\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [clickEnter, setClickEnter] = useState(false);\r\n  const containsNumbers = /\\d/.test(searchInput);\r\n\r\n  // const navigate = useNavigate();\r\n\r\n  const totalItems = totalDoc.total_doc\r\n  // const itemsPerPageChanged = itemsPerPage === 10\r\n\r\n  const endPoint = containsNumbers ? `formula=${searchInput}` : `chemsys=${searchInput}`\r\n  const activeEndPoint = searchInput !== '' ? endPoint : ''\r\n\r\n  const fetchmaterialData = async () => {\r\n    try {\r\n      const { data } = await axios.get(`${BASE_URL}/${activeEndPoint}&_page=${currentPage}&_per_page=${itemsPerPage}&_fields=${_fields}`);\r\n      setMaterialData(data.data)\r\n      setTotalDoc(data.meta)\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  }\r\n\r\n  const handleSearchEnter = () => {\r\n    fetchmaterialData()\r\n    setClickEnter(!clickEnter)\r\n  }\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      fetchmaterialData()\r\n      setClickEnter(!clickEnter)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchmaterialData()\r\n  }, [itemsPerPage, currentPage])\r\n\r\n  return (\r\n    <div to='' className='data-component' style={{ textDecoration: \"none\", color: \"black\" }}>\r\n      <div>\r\n        <h1>The Materials Project</h1>\r\n      </div>\r\n      <PeriodicTable searchInput={searchInput} setSearchInput={setSearchInput} handleSearchEnter={handleSearchEnter} handleKeyDown={handleKeyDown} />\r\n      <div className='material-container'>\r\n        <div className='data-header'>\r\n          <div>\r\n            {isLoading ?\r\n              <h3>Loading...</h3> :\r\n              <div>\r\n                {clickEnter && searchInput !== '' && isLoading\r\n                  ?\r\n                  <h3>{materialData.length} Materials Match your search</h3>\r\n                  :\r\n                  <h3>All <span>{`${totalDoc.total_doc} Materials`}</span></h3>\r\n                }\r\n              </div>\r\n            }\r\n            {!isLoading &&\r\n              <div>\r\n                <h4>Showing {\r\n                  (currentPage === 1)\r\n                    ? `${materialData.length === 0 ? \"0\" : currentPage} - ${Math.min(currentPage * itemsPerPage, totalItems)}`\r\n                    : `${currentPage * itemsPerPage - itemsPerPage + 1}- ${Math.min(currentPage * itemsPerPage, totalItems)}`\r\n                }</h4>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className='material-data'>\r\n          {!isLoading && materialData.length !== 0 &&\r\n            <div className='data_field'>\r\n              <table border={1}>\r\n                <thead>\r\n                  <tr>\r\n                    <th className='th'>Material ID</th>\r\n                    <th className='th'>Formula</th>\r\n                    <th className='th'>Crystal System</th>\r\n                    <th className='th'>Space Group System</th>\r\n                    <th className='th'>Sites</th>\r\n                    <th className='th'>Energy Above Hull</th>\r\n                    <th className='th'>Band Gap</th>\r\n                    <th className='th'>Density</th>\r\n                    <th className='th'>Ordering</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {materialData\r\n                    /* .slice(currentPage * 10 - itemsPerPage, currentPage * itemsPerPage) */\r\n                    .map((ele, index) => (\r\n                      <tr key={index}>\r\n                        <td>{ele.material_id}</td>\r\n                        <td>{ele.formula_pretty}</td>\r\n                        <td>{ele.symmetry.crystal_system}</td>\r\n                        <td>{ele.symmetry.symbol}</td>\r\n                        <td>{ele.nsites}</td>\r\n                        <td>{ele.energy_above_hull.toFixed(2)}</td>\r\n                        <td>{ele.band_gap.toFixed(2)}</td>\r\n                        <td>{ele.density.toFixed()}</td>\r\n                        <td>{ele.ordering}</td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n      {materialData.length !== 0 &&\r\n        <Pagination materialData={materialData} currentPage={currentPage} setCurrentPage={setCurrentPage} totalDoc={totalDoc} itemsPerPage={itemsPerPage} setItemsPerPage={setItemsPerPage} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataComponent;\r\n","export const _fields = \"material_id,chemsys,formula_pretty,symmetry,possible_species,crystal_system,is_stable,theoretical,ordering,is_gap_direct,is_metal,nsites,density,energy_above_hull,band_gap\"\r\nexport const BASE_URL = \"https://material-project-eight.vercel.app/materials/summary\"","import React from 'react';\nimport DataComponent from './Components/DataComponent';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\n\nconst App = () => {\n  return (\n    <Router>\n      <div className='APP'>\n        <Routes>\n          <Route path='/' exact element={<DataComponent />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n"],"sourceRoot":""}